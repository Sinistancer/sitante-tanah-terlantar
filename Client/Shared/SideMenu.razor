@using Blazor.Client.Services

@inject BreadcrumbUpdateService breadcrumbService
@inject SideBarUpdateService sideBarService
@inject IJSRuntime JSRuntime
@inject SharedDataService sharedDataService

<!-- Konten SideMenu -->
<button @onclick="_ToggleSideBar" data-drawer-target="sidebar-multi-level-sidebar" data-drawer-toggle="sidebar-multi-level-sidebar" aria-controls="sidebar-multi-level-sidebar" type="button" class="inline-flex items-center p-2 mt-2 ms-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
    <span class="sr-only">Open sidebar</span>
    <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path clip-rule="evenodd" fill-rule="evenodd" d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"></path>
    </svg>
</button>

<aside id="sidebar-multi-level-sidebar" class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0" aria-label="Sidebar" aria-hidden="true">
    <div class="h-full px-3 overflow-y-auto bg-sky-900 dark:bg-gray-800">
        <aside class="flex flex-col pb-4 items-center justify-center">
            <div class="relative block">
                <img src="/images/Rectangle 5.png" class="w-240 h-43" />
                <div class="absolute w-full py-5 bottom-0 inset-x-0 text-center text-sky-900 text-base font-bold font-barlow">TANAH TELANTAR</div>
            </div>
            <!-- Gambar PNG yang ada di tengah sidebar -->
            <img src="/images/logobpn.png" class="mb-2 w-20 h-20">
            <div class="relative block">
                <!-- Gambar SVG yang ada di tengah sidebar -->
                <img src="/images/Rectangle 4.svg" class="mb-2">
                <div class="absolute w-full py-0 bottom-4 inset-x-0 text-center text-sky-900 text-xs font-bold font-Inter">Kantor Badan Pertanahan Nasional</div>
            </div>
        </aside>
        <ul class="space-y-2 font-medium">
            <li>
                <a href="beranda" class="flex items-center p-2 text-white rounded-lg dark:text-white hover:bg-sky-950 dark:hover:bg-gray-700 group" @onclick='()=>_SetActiveMenuItem("Beranda")'>
                    <svg class="w-7 h-5 relative text-white-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                        <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                    </svg>
                    <span class="ml-3 text-xs font-bold font-Inter @(_activeMenuItem == "Beranda" ? "text-amber-400" : "text-white")">Beranda</span>
                </a>
            </li>
            <li>
                <button type="button" @onclick='() => _ActivateDropDown("PPTT")' class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700" aria-controls="dropdown-PPTT" data-collapse-toggle="dropdown-PPTT" aria-expanded="@_isActivateDropDownPPTT">
                    <img src="@(_CheckActiveMenuPPTT(_activeMenuItem) ? "/images/Vector2.svg" : "/images/Vector.svg")">
                    <span class="ml-4 text-xs font-bold font-Inter text-left text-white">Penertiban & Pendayagunaan Tanah Telantar</span>
                </button>
                <ul id="dropdown-PPTT" class="@(_isActivateDropDownPPTT ? "" : "hidden ")py-2 space-y-2">
                    <li>
                        <a href="LPPTT" @onclick='()=>_SetActiveMenuItem("LPPTT")' class="@(_activeMenuItem == "LPPTT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Laporan / Informasi</a>
                    </li>
                    <li>
                        <a href="IPPTT" @onclick='()=>_SetActiveMenuItem("IPPTT")' class="@(_activeMenuItem == "IPPTT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Inventarisasi</a>
                    </li>
                </ul>
            </li>
            <li>
                <button type="button" @onclick='() => _ActivateDropDown("PTT")' class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700" aria-controls="dropdown-PTT" data-collapse-toggle="dropdown-PTT" aria-expanded="@_isActivateDropDownPTT">
                    <img src="@(_CheckActiveMenuPTT(_activeMenuItem) ? "/images/Vector2.svg" : "/images/Vector.svg")">
                    <span class="ml-4 text-xs font-bold font-Inter text-left text-white">Penertiban Tanah Telantar</span>
                </button>
                <ul id="dropdown-PTT" class="@(_isActivateDropDownPTT ? "" : "hidden ")py-2 space-y-2">
                    <li><div class="pl-10 ml-6 text-xs font-bold font-Inter text-left text-white whitespace-normal">Evaluasi & Pemberitahuan</div></li>
                    <li>
                        <a href="MEPTT" @onclick='()=>_SetActiveMenuItem("MEPTT")' class="@(_activeMenuItem == "MEPTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Masa Evaluasi</a>
                    </li>
                    <li>
                        <a href="MPPTT" @onclick='()=>_SetActiveMenuItem("MPPTT")' class="@(_activeMenuItem == "MPPTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Masa Pemberitahuan</a>
                    </li>
                    <li><div class="pl-10 ml-6 mt-5 text-xs font-bold font-Inter text-left text-white whitespace-normal">Peringatan Tanah Telantar</div></li>
                    <li>
                        <a href="P1PTT" @onclick='()=>_SetActiveMenuItem("P1PTT")' class="@(_activeMenuItem == "P1PTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Peringatan Pertama</a>
                    </li>
                    <li>
                        <a href="P2PTT" @onclick='()=>_SetActiveMenuItem("P2PTT")' class="@(_activeMenuItem == "P2PTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Peringatan Kedua</a>
                    </li>
                    <li>
                        <a href="P3PTT" @onclick='()=>_SetActiveMenuItem("P3PTT")' class="@(_activeMenuItem == "P3PTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Peringatan Ketiga</a>
                    </li>
                    <li><div class="pl-10 ml-6 mt-5 text-xs font-bold font-Inter text-left text-white whitespace-normal">Penetapan / Penghapusan</div></li>
                    <li>
                        <a href="PENPTT" @onclick='()=>_SetActiveMenuItem("PENPTT")' class="@(_activeMenuItem == "PENPTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Penetapan Tanah Telantar</a>
                    </li>
                    <li>
                        <a href="PENGPTT" @onclick='()=>_SetActiveMenuItem("PENGPTT")' class="@(_activeMenuItem == "PENGPTT" ? "text-amber-400" : "text-white") flex items-center w-50 ml-10 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Penghapusan Tanah Telantar</a>
                    </li>
                </ul>
            </li>
            <li>
                <button type="button" @onclick='() => _ActivateDropDown("PT")' class="flex items-center w-full p-2 text-base text-gray-900 transition duration-75 rounded-lg group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700" aria-controls="dropdown-PT" data-collapse-toggle="dropdown-PT" aria-expanded="@_isActivateDropDownPT">
                    <img src="@(_CheckActiveMenuPT(_activeMenuItem) ? "/images/Vector2.svg" : "/images/Vector.svg")">
                    <span class="ml-4 text-xs font-bold font-Inter text-left text-white">Pendayagunaan TCUN</span>
                </button>
                <ul id="dropdown-PT" class="@(_isActivateDropDownPT ? "" : "hidden ")py-2 space-y-2">
                    <li>
                        <a href="KOTPT" @onclick='()=>_SetActiveMenuItem("KOTPT")' class="@(_activeMenuItem == "KOTPT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Kepastian Objek TCUN</a>
                    </li>
                    <li>
                        <a href="PENTPT" @onclick='()=>_SetActiveMenuItem("PENTPT")' class="@(_activeMenuItem == "PENTPT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Pengamanan TCUN</a>
                    </li>
                    <li>
                        <a href="PERPT" @onclick='()=>_SetActiveMenuItem("PERPT")' class="@(_activeMenuItem == "PERPT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Peruntukan TCUN</a>
                    </li>
                    <li>
                        <a href="PPTPT" @onclick='()=>_SetActiveMenuItem("PPTPT")' class="@(_activeMenuItem == "PPTPT" ? "text-amber-400" : "text-white") flex items-center w-full ml-1 p-2 text-xs font-normal transition duration-75 rounded-lg pl-11 group hover:bg-sky-950 dark:text-white dark:hover:bg-gray-700">Pelaporan Pendayagunaan TCUN</a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</aside>

@code {
    private string? _activeMenuItem;
    private string? _lastActiveMenuItem;

    private string? _activeMenuName;
    private string? _lastActiveMenuName;

    private bool _isActivateDropDownPPTT = false;
    private bool _isLastActivateDropDownPPTT = false;

    private bool _isActivateDropDownPTT = false;
    private bool _isLastActivateDropDownPTT = false;

    private bool _isActivateDropDownPT = false;
    private bool _isLastActivateDropDownPT = false;

    private bool _isActivateSideBar = false;
    private bool _isLastActivateSideBar = false;

    protected override void OnInitialized()
    {
        sharedDataService.NotifyActivateDropDownChanged += HandleActivateDropDownChanged;
        sharedDataService.NotifyActivateMenuItemChanged += HandleActiveMenuItemChanged;
        sharedDataService.NotifyActivateMenuNameChanged += HandleActiveMenuNameChanged;
    }

    private void HandleActivateDropDownChanged(bool newValue)
    {
        _isActivateDropDownPPTT = newValue;
    }

    private void HandleActiveMenuItemChanged(string newValue)
    {
        _activeMenuItem = newValue;
    }

    private void HandleActiveMenuNameChanged(string newValue)
    {
        _activeMenuName = newValue;
    }

    public void Dispose()
    {
        sharedDataService.NotifyActivateDropDownChanged -= HandleActivateDropDownChanged;
        sharedDataService.NotifyActivateMenuItemChanged -= HandleActiveMenuItemChanged;
        sharedDataService.NotifyActivateMenuNameChanged -= HandleActiveMenuNameChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            #region Active Menu Name
            _lastActiveMenuName = await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_activeMenuName");

            if (string.IsNullOrEmpty(_activeMenuName) && string.IsNullOrEmpty(_lastActiveMenuName))
            {
                await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuName", "Beranda");
                _activeMenuName = "Beranda";
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _activeMenuName
            }
            else
            {
                _activeMenuName = await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_activeMenuName");
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _activeMenuName
            }
            #endregion

            #region Active Menu Item
            _lastActiveMenuItem = await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_activeMenuItem");

            if (string.IsNullOrEmpty(_activeMenuItem) && string.IsNullOrEmpty(_lastActiveMenuItem))
            {
                await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuItem", "Beranda");
                _activeMenuItem = "Beranda";
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _activeMenuItem
            }
            else
            {
                _activeMenuItem = await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_activeMenuItem");
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _activeMenuItem
            }
            #endregion

            #region Active Drop Down PPTT
            bool.TryParse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPPTT"), out _isLastActivateDropDownPPTT);

            if (!_isActivateDropDownPPTT && !_isLastActivateDropDownPPTT)
            {
                await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPPTT", "False");
                _isActivateDropDownPPTT = false;
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPPTT
            }
            else
            {
                _isActivateDropDownPPTT = bool.Parse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPPTT"));
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPPTT
            }
            #endregion

            #region Active Drop Down PTT
            bool.TryParse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPTT"), out _isLastActivateDropDownPTT);

            if (!_isActivateDropDownPTT && !_isLastActivateDropDownPTT)
            {
                await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPTT", "False");
                _isActivateDropDownPTT = false;
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPTT
            }
            else
            {
                _isActivateDropDownPTT = bool.Parse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPTT"));
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPTT
            }
            #endregion

            #region Active Drop Down PT
            bool.TryParse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPT"), out _isLastActivateDropDownPT);

            if (!_isActivateDropDownPT && !_isLastActivateDropDownPT)
            {
                await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPT", "False");
                _isActivateDropDownPT = false;
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPT
            }
            else
            {
                _isActivateDropDownPT = bool.Parse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateDropDownPT"));
                StateHasChanged(); // Memastikan perubahan di-render setelah mendapatkan nilai _isActivateDropDownPT
            }
            #endregion

            await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateSideBar", "False");
        }
    }

    private async Task _SetActiveMenuItem(string menu)
    {
        _activeMenuItem = menu;
        if (_activeMenuItem == "LPPTT")
        {
            _activeMenuName = "Laporan / Informasi Tanah Terlantar";
        }
        else if (_activeMenuItem == "IPPTT")
        {
            _activeMenuName = "Inventarisasi";
        }
        else if (_activeMenuItem == "MEPTT")
        {
            _activeMenuName = "Evaluasi Tanah Terlantar";
        }
        else if (_activeMenuItem == "MPPTT")
        {
            _activeMenuName = "Masa Pemberitahuan";
        }
        else if (_activeMenuItem == "P1PTT")
        {
            _activeMenuName = "Peringatan Pertama";
        }
        else if (_activeMenuItem == "P2PTT")
        {
            _activeMenuName = "Peringatan Kedua";
        }
        else if (_activeMenuItem == "P3PTT")
        {
            _activeMenuName = "Peringatan Ketiga";
        }
        else if (_activeMenuItem == "PENPTT")
        {
            _activeMenuName = "Penetapan Tanah Terlantar";
        }
        else if (_activeMenuItem == "PENGPTT")
        {
            _activeMenuName = "Penghapusan Tanah Terindikasi Terlantar";
        }
        else if (_activeMenuItem == "KOTPT")
        {
            _activeMenuName = "Kepastian Objek TCUAN";
        }
        else if (_activeMenuItem == "PENTPT")
        {
            _activeMenuName = "Pengamanan TCUAN";
        }
        else if (_activeMenuItem == "PERPT")
        {
            _activeMenuName = "Peruntukan TCUAN";
        }
        else if (_activeMenuItem == "PPTPT")
        {
            _activeMenuName = "Pelaporan Pendayagunaan TCUAN";
        }
        else
        {
            _activeMenuItem = menu;
            _activeMenuName = menu;
            await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuItem", _activeMenuItem);
        }

        await JSRuntime.InvokeVoidAsync("modifyElement.removeDrawerBackdropElement");

        breadcrumbService.PublishBreadcrumbUpdate(_activeMenuName);
    }

    private bool _CheckActiveMenuPTT(string? menu)
    {
        if (_activeMenuItem == "MEPTT" || _activeMenuItem == "MPPTT" || _activeMenuItem == "P1PTT" || _activeMenuItem == "P2PTT" || _activeMenuItem == "P3PTT" || _activeMenuItem == "PENPTT" || _activeMenuItem == "PENGPTT")
        {
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuItem", _activeMenuItem);
            return true;
        }

        return false;
    }

    private bool _CheckActiveMenuPPTT(string? menu)
    {
        if (_activeMenuItem == "LPPTT" || _activeMenuItem == "IPPTT")
        {
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuItem", _activeMenuItem);
            return true;
        }

        return false;
    }

    private bool _CheckActiveMenuPT(string? menu)
    {
        if (_activeMenuItem == "KOTPT" || _activeMenuItem == "PENTPT" || _activeMenuItem == "PERPT" || _activeMenuItem == "PPTPT")
        {
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_activeMenuItem", _activeMenuItem);
            return true;
        }

        return false;
    }

    private void _ActivateDropDown(string? menu)
    {
        if (menu == "PPTT")
        {
            _isActivateDropDownPPTT = _isActivateDropDownPPTT == true ? false : true;
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPPTT", _isActivateDropDownPPTT.ToString());
        }
        else if (menu == "PTT")
        {
            _isActivateDropDownPTT = _isActivateDropDownPTT == true ? false : true;
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPTT", _isActivateDropDownPTT.ToString());
        }
        else
        {
            _isActivateDropDownPT = _isActivateDropDownPT == true ? false : true;
            JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateDropDownPT", _isActivateDropDownPT.ToString());
        }
    }

    private async Task _ToggleSideBar()
    {
        bool.TryParse(await JSRuntime.InvokeAsync<string>("blazorLocalStorage.getItem", "_isActivateSideBar"), out _isLastActivateSideBar);

        _isActivateSideBar = _isLastActivateSideBar ? false : true;
        await JSRuntime.InvokeVoidAsync("blazorLocalStorage.setItem", "_isActivateSideBar", _isActivateSideBar.ToString());
        if (_isActivateSideBar)
        {
            await JSRuntime.InvokeVoidAsync("changeBodyClass", "bg-stone-200 overflow-hidden");
            await JSRuntime.InvokeVoidAsync("modifyElement.addDrawerBackdropElement");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("changeBodyClass", "bg-stone-200");
            await JSRuntime.InvokeVoidAsync("modifyElement.removeDrawerBackdropElement");
        }
    }
}

